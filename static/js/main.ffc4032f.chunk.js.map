{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","utils/utils.js","index.jsx"],"names":["CommentInfo","comment","name","email","body","mailto","className","href","CommentList","comments","map","id","UserInfo","user","PostInfo","post","title","length","PostList","posts","postsFromServer","userId","usersFromServer","find","commentsFromServer","filter","postId","App","ReactDOM","render","document","getElementById"],"mappings":"8z8IAAaA,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAE1BC,EAGED,EAHFC,KACAC,EAEEF,EAFFE,MACAC,EACEH,EADFG,KAEIC,EAAM,iBAAaF,GAEzB,OACE,sBAAKG,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SACGJ,IAGF,OAED,mBACEI,UAAU,qBACVC,KAAMF,EAFR,SAIGF,OAIL,qBAAKG,UAAU,oBAAf,SACGF,QCvBII,G,MAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,qBAAKH,UAAU,cAAf,SAEIG,EAASC,KAAI,SAAAT,GAAO,OAClB,cAAC,EAAD,CAAaA,QAASA,GAAcA,EAAQU,WCLvCC,G,MAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACjBX,EAAgBW,EAAhBX,KAAMC,EAAUU,EAAVV,MACRE,EAAM,iBAAaF,GAEzB,OACE,mBAAGG,UAAU,WAAWC,KAAMF,EAA9B,SACGH,MCJMY,G,MAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAEvBC,EAIED,EAJFC,MACAH,EAGEE,EAHFF,KACAT,EAEEW,EAFFX,KACAK,EACEM,EADFN,SAGF,OACE,sBAAKH,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SACGU,IAGH,8BACG,eAED,cAAC,EAAD,CAAUH,KAAMA,UAIpB,mBAAGP,UAAU,iBAAb,SACGF,IAGH,uBAEGK,EAASQ,OAGN,cAAC,EAAD,CAAaR,SAAUA,IAFtB,mBAAG,UAAQ,oBAAX,kCC/BAS,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,qBAAKb,UAAU,WAAf,SACGa,EAAMT,KAAI,SAAAK,GAAI,OACb,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKJ,U,cCCtC,IAAMQ,EAAQC,EAAgBV,KAAI,SAAAK,GAAI,kCACjCA,GADiC,IAEpCF,MCL0BQ,EDKRN,EAAKM,OCJhBC,EAAgBC,MAAK,SAAAV,GAAI,OAAIA,EAAKF,KAAOU,MDKhDZ,UCF0BE,EDEJI,EAAKJ,GCDpBa,EAAmBC,QAAO,SAAAxB,GAAO,OAAIA,EAAQyB,SAAWf,QAD1D,IAAqBA,EAJAU,KDSfM,EAAM,kBACjB,0BAASrB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCAEA,cAAC,EAAD,CAAUa,MAAOA,QEZrBS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ffc4032f.chunk.js","sourcesContent":["export const CommentInfo = ({ comment }) => {\n  const {\n    name,\n    email,\n    body,\n  } = comment;\n  const mailto = `mailto:${email}`;\n\n  return (\n    <div className=\"CommentInfo\">\n      <div className=\"CommentInfo__title\">\n        <strong className=\"CommentInfo__name\">\n          {name}\n        </strong>\n\n        {' by '}\n\n        <a\n          className=\"CommentInfo__email\"\n          href={mailto}\n        >\n          {email}\n        </a>\n      </div>\n\n      <div className=\"CommentInfo__body\">\n        {body}\n      </div>\n    </div>\n  );\n};\n","import { CommentInfo } from '../CommentInfo';\nimport './CommentList.scss';\n\nexport const CommentList = ({ comments }) => (\n  <div className=\"CommentList\">\n    {\n      comments.map(comment => (\n        <CommentInfo comment={comment} key={comment.id} />\n      ))\n    }\n  </div>\n);\n","import './UserInfo.scss';\n\nexport const UserInfo = ({ user }) => {\n  const { name, email } = user;\n  const mailto = `mailto:${email}`;\n\n  return (\n    <a className=\"UserInfo\" href={mailto}>\n      {name}\n    </a>\n  );\n};\n","import { CommentList } from '../CommentList';\nimport { UserInfo } from '../UserInfo';\nimport './PostInfo.scss';\n\nexport const PostInfo = ({ post }) => {\n  const {\n    title,\n    user,\n    body,\n    comments,\n  } = post;\n\n  return (\n    <div className=\"PostInfo\">\n      <div className=\"PostInfo__header\">\n        <h3 className=\"PostInfo__title\">\n          {title}\n        </h3>\n\n        <p>\n          {' Posted by  '}\n\n          <UserInfo user={user} />\n        </p>\n      </div>\n\n      <p className=\"PostInfo__body\">\n        {body}\n      </p>\n\n      <hr />\n      {\n        !comments.length\n          ? (<b data-cy=\"NoCommentsMessage\">No comments yet</b>)\n          : (\n            <CommentList comments={comments} />\n          )\n      }\n    </div>\n  );\n};\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n    {posts.map(post => (\n      <PostInfo post={post} key={post.id} />\n    ))}\n  </div>\n);\n","import './App.scss';\n\nimport postsFromServer from './api/posts.json';\nimport { PostList } from './components/PostList';\nimport { getUserById, getComments } from './utils/utils';\n\nconst posts = postsFromServer.map(post => ({\n  ...post,\n  user: getUserById(post.userId),\n  comments: getComments(post.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n\n    <PostList posts={posts} />\n  </section>\n);\n","import commentsFromServer from '../api/comments.json';\nimport usersFromServer from '../api/users.json';\n\nexport function getUserById(userId) {\n  return usersFromServer.find(user => user.id === userId);\n}\n\nexport function getComments(id) {\n  return commentsFromServer.filter(comment => comment.postId === id);\n}\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}